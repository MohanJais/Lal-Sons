# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:h2:mem:TransTech
spring.datasource.username=lal
spring.datasource.password=Son
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
DB_CLOSE_ON_EXIT=FALSE

# H2 Console Configuration (for development purposes)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

hibernate.globally_quoted_identifiers=true

spring.kafka.producer.bootstrap-servers=your-kafka-broker
spring.kafka.consumer.bootstrap-servers=your-kafka-broker


# JWT Configuration (if you're using JWT for security)
# Replace with your own configuration
# jwt.secret=your-secret-key
# jwt.expiration-time=3600000 # 1 hour in milliseconds

# OAuth2 Configuration (if you're using OAuth2 for authentication)
# Replace with your own configuration
# spring.security.oauth2.client.registration.custom-client-id.client-id=your-client-id
# spring.security.oauth2.client.registration.custom-client-id.client-secret=your-client-secret
# spring.security.oauth2.client.registration.custom-client-id.scope=openid,profile,email
# spring.security.oauth2.client.registration.custom-client-id.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# spring.security.oauth2.client.provider.custom-provider.token-uri=your-token-uri
# spring.security.oauth2.client.provider.custom-provider.authorization-uri=your-authorization-uri
# spring.security.oauth2.client.provider.custom-provider.user-info-uri=your-user-info-uri

# Logging Configuration (customize as needed)
logging.level.org.springframework=INFO
logging.level.com.yourapplication=DEBUG

